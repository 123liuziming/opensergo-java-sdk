// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: specification/proto/servicecontract.proto

package com.alibaba.opensergo.api.proto;

/**
 * <pre>
 * Describes a field within a message.
 * </pre>
 *
 * Protobuf type {@code opensergo.api.FieldDescriptorProto}
 */
public final class FieldDescriptorProto extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:opensergo.api.FieldDescriptorProto)
    FieldDescriptorProtoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use FieldDescriptorProto.newBuilder() to construct.
  private FieldDescriptorProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private FieldDescriptorProto() {
    name_ = "";
    label_ = 0;
    type_ = 0;
    typeName_ = "";
    extendee_ = "";
    defaultValue_ = "";
    jsonName_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new FieldDescriptorProto();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private FieldDescriptorProto(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();
            bitField0_ |= 0x00000001;
            name_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();
            bitField0_ |= 0x00000020;
            extendee_ = s;
            break;
          }
          case 24: {
            bitField0_ |= 0x00000002;
            number_ = input.readInt32();
            break;
          }
          case 32: {
            int rawValue = input.readEnum();
            bitField0_ |= 0x00000004;
            label_ = rawValue;
            break;
          }
          case 40: {
            int rawValue = input.readEnum();
            bitField0_ |= 0x00000008;
            type_ = rawValue;
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();
            bitField0_ |= 0x00000010;
            typeName_ = s;
            break;
          }
          case 58: {
            java.lang.String s = input.readStringRequireUtf8();
            bitField0_ |= 0x00000040;
            defaultValue_ = s;
            break;
          }
          case 66: {
            com.alibaba.opensergo.api.proto.FieldOptions.Builder subBuilder = null;
            if (((bitField0_ & 0x00000200) != 0)) {
              subBuilder = options_.toBuilder();
            }
            options_ = input.readMessage(com.alibaba.opensergo.api.proto.FieldOptions.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(options_);
              options_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000200;
            break;
          }
          case 72: {
            bitField0_ |= 0x00000080;
            oneofIndex_ = input.readInt32();
            break;
          }
          case 82: {
            java.lang.String s = input.readStringRequireUtf8();
            bitField0_ |= 0x00000100;
            jsonName_ = s;
            break;
          }
          case 136: {
            bitField0_ |= 0x00000400;
            proto3Optional_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.alibaba.opensergo.api.proto.Servicecontract.internal_static_opensergo_api_FieldDescriptorProto_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.alibaba.opensergo.api.proto.Servicecontract.internal_static_opensergo_api_FieldDescriptorProto_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.alibaba.opensergo.api.proto.FieldDescriptorProto.class, com.alibaba.opensergo.api.proto.FieldDescriptorProto.Builder.class);
  }

  /**
   * Protobuf enum {@code opensergo.api.FieldDescriptorProto.Type}
   */
  public enum Type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 0 is reserved for errors.
     * </pre>
     *
     * <code>TYPE_UNIVERSAL = 0;</code>
     */
    TYPE_UNIVERSAL(0),
    /**
     * <pre>
     * Order is weird for historical reasons.
     * </pre>
     *
     * <code>TYPE_DOUBLE = 1;</code>
     */
    TYPE_DOUBLE(1),
    /**
     * <code>TYPE_FLOAT = 2;</code>
     */
    TYPE_FLOAT(2),
    /**
     * <pre>
     * Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if
     * negative values are likely.
     * </pre>
     *
     * <code>TYPE_INT64 = 3;</code>
     */
    TYPE_INT64(3),
    /**
     * <code>TYPE_UINT64 = 4;</code>
     */
    TYPE_UINT64(4),
    /**
     * <pre>
     * Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if
     * negative values are likely.
     * </pre>
     *
     * <code>TYPE_INT32 = 5;</code>
     */
    TYPE_INT32(5),
    /**
     * <code>TYPE_FIXED64 = 6;</code>
     */
    TYPE_FIXED64(6),
    /**
     * <code>TYPE_FIXED32 = 7;</code>
     */
    TYPE_FIXED32(7),
    /**
     * <code>TYPE_BOOL = 8;</code>
     */
    TYPE_BOOL(8),
    /**
     * <code>TYPE_STRING = 9;</code>
     */
    TYPE_STRING(9),
    /**
     * <pre>
     * Tag-delimited aggregate.
     * Group type is deprecated and not supported in proto3. However, Proto3
     * implementations should still be able to parse the group wire format and
     * treat group fields as unknown fields.
     * </pre>
     *
     * <code>TYPE_GROUP = 10;</code>
     */
    TYPE_GROUP(10),
    /**
     * <pre>
     * Length-delimited aggregate.
     * </pre>
     *
     * <code>TYPE_MESSAGE = 11;</code>
     */
    TYPE_MESSAGE(11),
    /**
     * <pre>
     * New in version 2.
     * </pre>
     *
     * <code>TYPE_BYTES = 12;</code>
     */
    TYPE_BYTES(12),
    /**
     * <code>TYPE_UINT32 = 13;</code>
     */
    TYPE_UINT32(13),
    /**
     * <code>TYPE_ENUM = 14;</code>
     */
    TYPE_ENUM(14),
    /**
     * <code>TYPE_SFIXED32 = 15;</code>
     */
    TYPE_SFIXED32(15),
    /**
     * <code>TYPE_SFIXED64 = 16;</code>
     */
    TYPE_SFIXED64(16),
    /**
     * <pre>
     * Uses ZigZag encoding.
     * </pre>
     *
     * <code>TYPE_SINT32 = 17;</code>
     */
    TYPE_SINT32(17),
    /**
     * <pre>
     * Uses ZigZag encoding.
     * </pre>
     *
     * <code>TYPE_SINT64 = 18;</code>
     */
    TYPE_SINT64(18),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 0 is reserved for errors.
     * </pre>
     *
     * <code>TYPE_UNIVERSAL = 0;</code>
     */
    public static final int TYPE_UNIVERSAL_VALUE = 0;
    /**
     * <pre>
     * Order is weird for historical reasons.
     * </pre>
     *
     * <code>TYPE_DOUBLE = 1;</code>
     */
    public static final int TYPE_DOUBLE_VALUE = 1;
    /**
     * <code>TYPE_FLOAT = 2;</code>
     */
    public static final int TYPE_FLOAT_VALUE = 2;
    /**
     * <pre>
     * Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if
     * negative values are likely.
     * </pre>
     *
     * <code>TYPE_INT64 = 3;</code>
     */
    public static final int TYPE_INT64_VALUE = 3;
    /**
     * <code>TYPE_UINT64 = 4;</code>
     */
    public static final int TYPE_UINT64_VALUE = 4;
    /**
     * <pre>
     * Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if
     * negative values are likely.
     * </pre>
     *
     * <code>TYPE_INT32 = 5;</code>
     */
    public static final int TYPE_INT32_VALUE = 5;
    /**
     * <code>TYPE_FIXED64 = 6;</code>
     */
    public static final int TYPE_FIXED64_VALUE = 6;
    /**
     * <code>TYPE_FIXED32 = 7;</code>
     */
    public static final int TYPE_FIXED32_VALUE = 7;
    /**
     * <code>TYPE_BOOL = 8;</code>
     */
    public static final int TYPE_BOOL_VALUE = 8;
    /**
     * <code>TYPE_STRING = 9;</code>
     */
    public static final int TYPE_STRING_VALUE = 9;
    /**
     * <pre>
     * Tag-delimited aggregate.
     * Group type is deprecated and not supported in proto3. However, Proto3
     * implementations should still be able to parse the group wire format and
     * treat group fields as unknown fields.
     * </pre>
     *
     * <code>TYPE_GROUP = 10;</code>
     */
    public static final int TYPE_GROUP_VALUE = 10;
    /**
     * <pre>
     * Length-delimited aggregate.
     * </pre>
     *
     * <code>TYPE_MESSAGE = 11;</code>
     */
    public static final int TYPE_MESSAGE_VALUE = 11;
    /**
     * <pre>
     * New in version 2.
     * </pre>
     *
     * <code>TYPE_BYTES = 12;</code>
     */
    public static final int TYPE_BYTES_VALUE = 12;
    /**
     * <code>TYPE_UINT32 = 13;</code>
     */
    public static final int TYPE_UINT32_VALUE = 13;
    /**
     * <code>TYPE_ENUM = 14;</code>
     */
    public static final int TYPE_ENUM_VALUE = 14;
    /**
     * <code>TYPE_SFIXED32 = 15;</code>
     */
    public static final int TYPE_SFIXED32_VALUE = 15;
    /**
     * <code>TYPE_SFIXED64 = 16;</code>
     */
    public static final int TYPE_SFIXED64_VALUE = 16;
    /**
     * <pre>
     * Uses ZigZag encoding.
     * </pre>
     *
     * <code>TYPE_SINT32 = 17;</code>
     */
    public static final int TYPE_SINT32_VALUE = 17;
    /**
     * <pre>
     * Uses ZigZag encoding.
     * </pre>
     *
     * <code>TYPE_SINT64 = 18;</code>
     */
    public static final int TYPE_SINT64_VALUE = 18;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Type valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Type forNumber(int value) {
      switch (value) {
        case 0: return TYPE_UNIVERSAL;
        case 1: return TYPE_DOUBLE;
        case 2: return TYPE_FLOAT;
        case 3: return TYPE_INT64;
        case 4: return TYPE_UINT64;
        case 5: return TYPE_INT32;
        case 6: return TYPE_FIXED64;
        case 7: return TYPE_FIXED32;
        case 8: return TYPE_BOOL;
        case 9: return TYPE_STRING;
        case 10: return TYPE_GROUP;
        case 11: return TYPE_MESSAGE;
        case 12: return TYPE_BYTES;
        case 13: return TYPE_UINT32;
        case 14: return TYPE_ENUM;
        case 15: return TYPE_SFIXED32;
        case 16: return TYPE_SFIXED64;
        case 17: return TYPE_SINT32;
        case 18: return TYPE_SINT64;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Type>() {
            public Type findValueByNumber(int number) {
              return Type.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.alibaba.opensergo.api.proto.FieldDescriptorProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final Type[] VALUES = values();

    public static Type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:opensergo.api.FieldDescriptorProto.Type)
  }

  /**
   * Protobuf enum {@code opensergo.api.FieldDescriptorProto.Label}
   */
  public enum Label
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 0 is reserved for errors
     * </pre>
     *
     * <code>LABEL_UNIVERSAL = 0;</code>
     */
    LABEL_UNIVERSAL(0),
    /**
     * <code>LABEL_OPTIONAL = 1;</code>
     */
    LABEL_OPTIONAL(1),
    /**
     * <code>LABEL_REQUIRED = 2;</code>
     */
    LABEL_REQUIRED(2),
    /**
     * <code>LABEL_REPEATED = 3;</code>
     */
    LABEL_REPEATED(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 0 is reserved for errors
     * </pre>
     *
     * <code>LABEL_UNIVERSAL = 0;</code>
     */
    public static final int LABEL_UNIVERSAL_VALUE = 0;
    /**
     * <code>LABEL_OPTIONAL = 1;</code>
     */
    public static final int LABEL_OPTIONAL_VALUE = 1;
    /**
     * <code>LABEL_REQUIRED = 2;</code>
     */
    public static final int LABEL_REQUIRED_VALUE = 2;
    /**
     * <code>LABEL_REPEATED = 3;</code>
     */
    public static final int LABEL_REPEATED_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Label valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Label forNumber(int value) {
      switch (value) {
        case 0: return LABEL_UNIVERSAL;
        case 1: return LABEL_OPTIONAL;
        case 2: return LABEL_REQUIRED;
        case 3: return LABEL_REPEATED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Label>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Label> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Label>() {
            public Label findValueByNumber(int number) {
              return Label.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.alibaba.opensergo.api.proto.FieldDescriptorProto.getDescriptor().getEnumTypes().get(1);
    }

    private static final Label[] VALUES = values();

    public static Label valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Label(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:opensergo.api.FieldDescriptorProto.Label)
  }

  private int bitField0_;
  public static final int NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object name_;
  /**
   * <code>optional string name = 1;</code>
   * @return Whether the name field is set.
   */
  @java.lang.Override
  public boolean hasName() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>optional string name = 1;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <code>optional string name = 1;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NUMBER_FIELD_NUMBER = 3;
  private int number_;
  /**
   * <code>optional int32 number = 3;</code>
   * @return Whether the number field is set.
   */
  @java.lang.Override
  public boolean hasNumber() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>optional int32 number = 3;</code>
   * @return The number.
   */
  @java.lang.Override
  public int getNumber() {
    return number_;
  }

  public static final int LABEL_FIELD_NUMBER = 4;
  private int label_;
  /**
   * <code>optional .opensergo.api.FieldDescriptorProto.Label label = 4;</code>
   * @return Whether the label field is set.
   */
  @java.lang.Override public boolean hasLabel() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <code>optional .opensergo.api.FieldDescriptorProto.Label label = 4;</code>
   * @return The enum numeric value on the wire for label.
   */
  @java.lang.Override public int getLabelValue() {
    return label_;
  }
  /**
   * <code>optional .opensergo.api.FieldDescriptorProto.Label label = 4;</code>
   * @return The label.
   */
  @java.lang.Override public com.alibaba.opensergo.api.proto.FieldDescriptorProto.Label getLabel() {
    @SuppressWarnings("deprecation")
    com.alibaba.opensergo.api.proto.FieldDescriptorProto.Label result = com.alibaba.opensergo.api.proto.FieldDescriptorProto.Label.valueOf(label_);
    return result == null ? com.alibaba.opensergo.api.proto.FieldDescriptorProto.Label.UNRECOGNIZED : result;
  }

  public static final int TYPE_FIELD_NUMBER = 5;
  private int type_;
  /**
   * <pre>
   * If type_name is set, this need not be set.  If both this and type_name
   * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.
   * </pre>
   *
   * <code>optional .opensergo.api.FieldDescriptorProto.Type type = 5;</code>
   * @return Whether the type field is set.
   */
  @java.lang.Override public boolean hasType() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * If type_name is set, this need not be set.  If both this and type_name
   * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.
   * </pre>
   *
   * <code>optional .opensergo.api.FieldDescriptorProto.Type type = 5;</code>
   * @return The enum numeric value on the wire for type.
   */
  @java.lang.Override public int getTypeValue() {
    return type_;
  }
  /**
   * <pre>
   * If type_name is set, this need not be set.  If both this and type_name
   * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.
   * </pre>
   *
   * <code>optional .opensergo.api.FieldDescriptorProto.Type type = 5;</code>
   * @return The type.
   */
  @java.lang.Override public com.alibaba.opensergo.api.proto.FieldDescriptorProto.Type getType() {
    @SuppressWarnings("deprecation")
    com.alibaba.opensergo.api.proto.FieldDescriptorProto.Type result = com.alibaba.opensergo.api.proto.FieldDescriptorProto.Type.valueOf(type_);
    return result == null ? com.alibaba.opensergo.api.proto.FieldDescriptorProto.Type.UNRECOGNIZED : result;
  }

  public static final int TYPE_NAME_FIELD_NUMBER = 6;
  private volatile java.lang.Object typeName_;
  /**
   * <pre>
   * For message and enum types, this is the name of the type.  If the name
   * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping
   * rules are used to find the type (i.e. first the nested types within this
   * message are searched, then within the parent, on up to the root
   * namespace).
   * </pre>
   *
   * <code>optional string type_name = 6;</code>
   * @return Whether the typeName field is set.
   */
  @java.lang.Override
  public boolean hasTypeName() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * For message and enum types, this is the name of the type.  If the name
   * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping
   * rules are used to find the type (i.e. first the nested types within this
   * message are searched, then within the parent, on up to the root
   * namespace).
   * </pre>
   *
   * <code>optional string type_name = 6;</code>
   * @return The typeName.
   */
  @java.lang.Override
  public java.lang.String getTypeName() {
    java.lang.Object ref = typeName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      typeName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * For message and enum types, this is the name of the type.  If the name
   * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping
   * rules are used to find the type (i.e. first the nested types within this
   * message are searched, then within the parent, on up to the root
   * namespace).
   * </pre>
   *
   * <code>optional string type_name = 6;</code>
   * @return The bytes for typeName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTypeNameBytes() {
    java.lang.Object ref = typeName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      typeName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int EXTENDEE_FIELD_NUMBER = 2;
  private volatile java.lang.Object extendee_;
  /**
   * <pre>
   * For extensions, this is the name of the type being extended.  It is
   * resolved in the same manner as type_name.
   * </pre>
   *
   * <code>optional string extendee = 2;</code>
   * @return Whether the extendee field is set.
   */
  @java.lang.Override
  public boolean hasExtendee() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * For extensions, this is the name of the type being extended.  It is
   * resolved in the same manner as type_name.
   * </pre>
   *
   * <code>optional string extendee = 2;</code>
   * @return The extendee.
   */
  @java.lang.Override
  public java.lang.String getExtendee() {
    java.lang.Object ref = extendee_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      extendee_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * For extensions, this is the name of the type being extended.  It is
   * resolved in the same manner as type_name.
   * </pre>
   *
   * <code>optional string extendee = 2;</code>
   * @return The bytes for extendee.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getExtendeeBytes() {
    java.lang.Object ref = extendee_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      extendee_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DEFAULT_VALUE_FIELD_NUMBER = 7;
  private volatile java.lang.Object defaultValue_;
  /**
   * <pre>
   * For numeric types, contains the original text representation of the value.
   * For booleans, "true" or "false".
   * For strings, contains the default text contents (not escaped in any way).
   * For bytes, contains the C escaped value.  All bytes &gt;= 128 are escaped.
   * </pre>
   *
   * <code>optional string default_value = 7;</code>
   * @return Whether the defaultValue field is set.
   */
  @java.lang.Override
  public boolean hasDefaultValue() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <pre>
   * For numeric types, contains the original text representation of the value.
   * For booleans, "true" or "false".
   * For strings, contains the default text contents (not escaped in any way).
   * For bytes, contains the C escaped value.  All bytes &gt;= 128 are escaped.
   * </pre>
   *
   * <code>optional string default_value = 7;</code>
   * @return The defaultValue.
   */
  @java.lang.Override
  public java.lang.String getDefaultValue() {
    java.lang.Object ref = defaultValue_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      defaultValue_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * For numeric types, contains the original text representation of the value.
   * For booleans, "true" or "false".
   * For strings, contains the default text contents (not escaped in any way).
   * For bytes, contains the C escaped value.  All bytes &gt;= 128 are escaped.
   * </pre>
   *
   * <code>optional string default_value = 7;</code>
   * @return The bytes for defaultValue.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDefaultValueBytes() {
    java.lang.Object ref = defaultValue_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      defaultValue_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ONEOF_INDEX_FIELD_NUMBER = 9;
  private int oneofIndex_;
  /**
   * <pre>
   * If set, gives the index of a oneof in the containing type's oneof_decl
   * list.  This field is a member of that oneof.
   * </pre>
   *
   * <code>optional int32 oneof_index = 9;</code>
   * @return Whether the oneofIndex field is set.
   */
  @java.lang.Override
  public boolean hasOneofIndex() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   * <pre>
   * If set, gives the index of a oneof in the containing type's oneof_decl
   * list.  This field is a member of that oneof.
   * </pre>
   *
   * <code>optional int32 oneof_index = 9;</code>
   * @return The oneofIndex.
   */
  @java.lang.Override
  public int getOneofIndex() {
    return oneofIndex_;
  }

  public static final int JSON_NAME_FIELD_NUMBER = 10;
  private volatile java.lang.Object jsonName_;
  /**
   * <pre>
   * JSON name of this field. The value is set by protocol compiler. If the
   * user has set a "json_name" option on this field, that option's value
   * will be used. Otherwise, it's deduced from the field's name by converting
   * it to camelCase.
   * </pre>
   *
   * <code>optional string json_name = 10;</code>
   * @return Whether the jsonName field is set.
   */
  @java.lang.Override
  public boolean hasJsonName() {
    return ((bitField0_ & 0x00000100) != 0);
  }
  /**
   * <pre>
   * JSON name of this field. The value is set by protocol compiler. If the
   * user has set a "json_name" option on this field, that option's value
   * will be used. Otherwise, it's deduced from the field's name by converting
   * it to camelCase.
   * </pre>
   *
   * <code>optional string json_name = 10;</code>
   * @return The jsonName.
   */
  @java.lang.Override
  public java.lang.String getJsonName() {
    java.lang.Object ref = jsonName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      jsonName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * JSON name of this field. The value is set by protocol compiler. If the
   * user has set a "json_name" option on this field, that option's value
   * will be used. Otherwise, it's deduced from the field's name by converting
   * it to camelCase.
   * </pre>
   *
   * <code>optional string json_name = 10;</code>
   * @return The bytes for jsonName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getJsonNameBytes() {
    java.lang.Object ref = jsonName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      jsonName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int OPTIONS_FIELD_NUMBER = 8;
  private com.alibaba.opensergo.api.proto.FieldOptions options_;
  /**
   * <code>optional .opensergo.api.FieldOptions options = 8;</code>
   * @return Whether the options field is set.
   */
  @java.lang.Override
  public boolean hasOptions() {
    return ((bitField0_ & 0x00000200) != 0);
  }
  /**
   * <code>optional .opensergo.api.FieldOptions options = 8;</code>
   * @return The options.
   */
  @java.lang.Override
  public com.alibaba.opensergo.api.proto.FieldOptions getOptions() {
    return options_ == null ? com.alibaba.opensergo.api.proto.FieldOptions.getDefaultInstance() : options_;
  }
  /**
   * <code>optional .opensergo.api.FieldOptions options = 8;</code>
   */
  @java.lang.Override
  public com.alibaba.opensergo.api.proto.FieldOptionsOrBuilder getOptionsOrBuilder() {
    return options_ == null ? com.alibaba.opensergo.api.proto.FieldOptions.getDefaultInstance() : options_;
  }

  public static final int PROTO3_OPTIONAL_FIELD_NUMBER = 17;
  private boolean proto3Optional_;
  /**
   * <pre>
   * If true, this is a proto3 "optional". When a proto3 field is optional, it
   * tracks presence regardless of field type.
   * When proto3_optional is true, this field must be belong to a oneof to
   * signal to old proto3 clients that presence is tracked for this field. This
   * oneof is known as a "synthetic" oneof, and this field must be its sole
   * member (each proto3 optional field gets its own synthetic oneof). Synthetic
   * oneofs exist in the descriptor only, and do not generate any API. Synthetic
   * oneofs must be ordered after all "real" oneofs.
   * For message fields, proto3_optional doesn't create any semantic change,
   * since non-repeated message fields always track presence. However it still
   * indicates the semantic detail of whether the user wrote "optional" or not.
   * This can be useful for round-tripping the .proto file. For consistency we
   * give message fields a synthetic oneof also, even though it is not required
   * to track presence. This is especially important because the parser can't
   * tell if a field is a message or an enum, so it must always create a
   * synthetic oneof.
   * Proto2 optional fields do not set this flag, because they already indicate
   * optional with `LABEL_OPTIONAL`.
   * </pre>
   *
   * <code>optional bool proto3_optional = 17;</code>
   * @return Whether the proto3Optional field is set.
   */
  @java.lang.Override
  public boolean hasProto3Optional() {
    return ((bitField0_ & 0x00000400) != 0);
  }
  /**
   * <pre>
   * If true, this is a proto3 "optional". When a proto3 field is optional, it
   * tracks presence regardless of field type.
   * When proto3_optional is true, this field must be belong to a oneof to
   * signal to old proto3 clients that presence is tracked for this field. This
   * oneof is known as a "synthetic" oneof, and this field must be its sole
   * member (each proto3 optional field gets its own synthetic oneof). Synthetic
   * oneofs exist in the descriptor only, and do not generate any API. Synthetic
   * oneofs must be ordered after all "real" oneofs.
   * For message fields, proto3_optional doesn't create any semantic change,
   * since non-repeated message fields always track presence. However it still
   * indicates the semantic detail of whether the user wrote "optional" or not.
   * This can be useful for round-tripping the .proto file. For consistency we
   * give message fields a synthetic oneof also, even though it is not required
   * to track presence. This is especially important because the parser can't
   * tell if a field is a message or an enum, so it must always create a
   * synthetic oneof.
   * Proto2 optional fields do not set this flag, because they already indicate
   * optional with `LABEL_OPTIONAL`.
   * </pre>
   *
   * <code>optional bool proto3_optional = 17;</code>
   * @return The proto3Optional.
   */
  @java.lang.Override
  public boolean getProto3Optional() {
    return proto3Optional_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, extendee_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeInt32(3, number_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeEnum(4, label_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeEnum(5, type_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, typeName_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, defaultValue_);
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      output.writeMessage(8, getOptions());
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      output.writeInt32(9, oneofIndex_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 10, jsonName_);
    }
    if (((bitField0_ & 0x00000400) != 0)) {
      output.writeBool(17, proto3Optional_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, extendee_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, number_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, label_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(5, type_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, typeName_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, defaultValue_);
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getOptions());
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(9, oneofIndex_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, jsonName_);
    }
    if (((bitField0_ & 0x00000400) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(17, proto3Optional_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.alibaba.opensergo.api.proto.FieldDescriptorProto)) {
      return super.equals(obj);
    }
    com.alibaba.opensergo.api.proto.FieldDescriptorProto other = (com.alibaba.opensergo.api.proto.FieldDescriptorProto) obj;

    if (hasName() != other.hasName()) return false;
    if (hasName()) {
      if (!getName()
          .equals(other.getName())) return false;
    }
    if (hasNumber() != other.hasNumber()) return false;
    if (hasNumber()) {
      if (getNumber()
          != other.getNumber()) return false;
    }
    if (hasLabel() != other.hasLabel()) return false;
    if (hasLabel()) {
      if (label_ != other.label_) return false;
    }
    if (hasType() != other.hasType()) return false;
    if (hasType()) {
      if (type_ != other.type_) return false;
    }
    if (hasTypeName() != other.hasTypeName()) return false;
    if (hasTypeName()) {
      if (!getTypeName()
          .equals(other.getTypeName())) return false;
    }
    if (hasExtendee() != other.hasExtendee()) return false;
    if (hasExtendee()) {
      if (!getExtendee()
          .equals(other.getExtendee())) return false;
    }
    if (hasDefaultValue() != other.hasDefaultValue()) return false;
    if (hasDefaultValue()) {
      if (!getDefaultValue()
          .equals(other.getDefaultValue())) return false;
    }
    if (hasOneofIndex() != other.hasOneofIndex()) return false;
    if (hasOneofIndex()) {
      if (getOneofIndex()
          != other.getOneofIndex()) return false;
    }
    if (hasJsonName() != other.hasJsonName()) return false;
    if (hasJsonName()) {
      if (!getJsonName()
          .equals(other.getJsonName())) return false;
    }
    if (hasOptions() != other.hasOptions()) return false;
    if (hasOptions()) {
      if (!getOptions()
          .equals(other.getOptions())) return false;
    }
    if (hasProto3Optional() != other.hasProto3Optional()) return false;
    if (hasProto3Optional()) {
      if (getProto3Optional()
          != other.getProto3Optional()) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasName()) {
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
    }
    if (hasNumber()) {
      hash = (37 * hash) + NUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getNumber();
    }
    if (hasLabel()) {
      hash = (37 * hash) + LABEL_FIELD_NUMBER;
      hash = (53 * hash) + label_;
    }
    if (hasType()) {
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
    }
    if (hasTypeName()) {
      hash = (37 * hash) + TYPE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getTypeName().hashCode();
    }
    if (hasExtendee()) {
      hash = (37 * hash) + EXTENDEE_FIELD_NUMBER;
      hash = (53 * hash) + getExtendee().hashCode();
    }
    if (hasDefaultValue()) {
      hash = (37 * hash) + DEFAULT_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getDefaultValue().hashCode();
    }
    if (hasOneofIndex()) {
      hash = (37 * hash) + ONEOF_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getOneofIndex();
    }
    if (hasJsonName()) {
      hash = (37 * hash) + JSON_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getJsonName().hashCode();
    }
    if (hasOptions()) {
      hash = (37 * hash) + OPTIONS_FIELD_NUMBER;
      hash = (53 * hash) + getOptions().hashCode();
    }
    if (hasProto3Optional()) {
      hash = (37 * hash) + PROTO3_OPTIONAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getProto3Optional());
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.alibaba.opensergo.api.proto.FieldDescriptorProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.alibaba.opensergo.api.proto.FieldDescriptorProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.alibaba.opensergo.api.proto.FieldDescriptorProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.alibaba.opensergo.api.proto.FieldDescriptorProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.alibaba.opensergo.api.proto.FieldDescriptorProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.alibaba.opensergo.api.proto.FieldDescriptorProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.alibaba.opensergo.api.proto.FieldDescriptorProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.alibaba.opensergo.api.proto.FieldDescriptorProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.alibaba.opensergo.api.proto.FieldDescriptorProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.alibaba.opensergo.api.proto.FieldDescriptorProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.alibaba.opensergo.api.proto.FieldDescriptorProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.alibaba.opensergo.api.proto.FieldDescriptorProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.alibaba.opensergo.api.proto.FieldDescriptorProto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Describes a field within a message.
   * </pre>
   *
   * Protobuf type {@code opensergo.api.FieldDescriptorProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:opensergo.api.FieldDescriptorProto)
      com.alibaba.opensergo.api.proto.FieldDescriptorProtoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.opensergo.api.proto.Servicecontract.internal_static_opensergo_api_FieldDescriptorProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.opensergo.api.proto.Servicecontract.internal_static_opensergo_api_FieldDescriptorProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.opensergo.api.proto.FieldDescriptorProto.class, com.alibaba.opensergo.api.proto.FieldDescriptorProto.Builder.class);
    }

    // Construct using com.alibaba.opensergo.api.proto.FieldDescriptorProto.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getOptionsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      name_ = "";
      bitField0_ = (bitField0_ & ~0x00000001);
      number_ = 0;
      bitField0_ = (bitField0_ & ~0x00000002);
      label_ = 0;
      bitField0_ = (bitField0_ & ~0x00000004);
      type_ = 0;
      bitField0_ = (bitField0_ & ~0x00000008);
      typeName_ = "";
      bitField0_ = (bitField0_ & ~0x00000010);
      extendee_ = "";
      bitField0_ = (bitField0_ & ~0x00000020);
      defaultValue_ = "";
      bitField0_ = (bitField0_ & ~0x00000040);
      oneofIndex_ = 0;
      bitField0_ = (bitField0_ & ~0x00000080);
      jsonName_ = "";
      bitField0_ = (bitField0_ & ~0x00000100);
      if (optionsBuilder_ == null) {
        options_ = null;
      } else {
        optionsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000200);
      proto3Optional_ = false;
      bitField0_ = (bitField0_ & ~0x00000400);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.alibaba.opensergo.api.proto.Servicecontract.internal_static_opensergo_api_FieldDescriptorProto_descriptor;
    }

    @java.lang.Override
    public com.alibaba.opensergo.api.proto.FieldDescriptorProto getDefaultInstanceForType() {
      return com.alibaba.opensergo.api.proto.FieldDescriptorProto.getDefaultInstance();
    }

    @java.lang.Override
    public com.alibaba.opensergo.api.proto.FieldDescriptorProto build() {
      com.alibaba.opensergo.api.proto.FieldDescriptorProto result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.alibaba.opensergo.api.proto.FieldDescriptorProto buildPartial() {
      com.alibaba.opensergo.api.proto.FieldDescriptorProto result = new com.alibaba.opensergo.api.proto.FieldDescriptorProto(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        to_bitField0_ |= 0x00000001;
      }
      result.name_ = name_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.number_ = number_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        to_bitField0_ |= 0x00000004;
      }
      result.label_ = label_;
      if (((from_bitField0_ & 0x00000008) != 0)) {
        to_bitField0_ |= 0x00000008;
      }
      result.type_ = type_;
      if (((from_bitField0_ & 0x00000010) != 0)) {
        to_bitField0_ |= 0x00000010;
      }
      result.typeName_ = typeName_;
      if (((from_bitField0_ & 0x00000020) != 0)) {
        to_bitField0_ |= 0x00000020;
      }
      result.extendee_ = extendee_;
      if (((from_bitField0_ & 0x00000040) != 0)) {
        to_bitField0_ |= 0x00000040;
      }
      result.defaultValue_ = defaultValue_;
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.oneofIndex_ = oneofIndex_;
        to_bitField0_ |= 0x00000080;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        to_bitField0_ |= 0x00000100;
      }
      result.jsonName_ = jsonName_;
      if (((from_bitField0_ & 0x00000200) != 0)) {
        if (optionsBuilder_ == null) {
          result.options_ = options_;
        } else {
          result.options_ = optionsBuilder_.build();
        }
        to_bitField0_ |= 0x00000200;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.proto3Optional_ = proto3Optional_;
        to_bitField0_ |= 0x00000400;
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.alibaba.opensergo.api.proto.FieldDescriptorProto) {
        return mergeFrom((com.alibaba.opensergo.api.proto.FieldDescriptorProto)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.alibaba.opensergo.api.proto.FieldDescriptorProto other) {
      if (other == com.alibaba.opensergo.api.proto.FieldDescriptorProto.getDefaultInstance()) return this;
      if (other.hasName()) {
        bitField0_ |= 0x00000001;
        name_ = other.name_;
        onChanged();
      }
      if (other.hasNumber()) {
        setNumber(other.getNumber());
      }
      if (other.hasLabel()) {
        setLabel(other.getLabel());
      }
      if (other.hasType()) {
        setType(other.getType());
      }
      if (other.hasTypeName()) {
        bitField0_ |= 0x00000010;
        typeName_ = other.typeName_;
        onChanged();
      }
      if (other.hasExtendee()) {
        bitField0_ |= 0x00000020;
        extendee_ = other.extendee_;
        onChanged();
      }
      if (other.hasDefaultValue()) {
        bitField0_ |= 0x00000040;
        defaultValue_ = other.defaultValue_;
        onChanged();
      }
      if (other.hasOneofIndex()) {
        setOneofIndex(other.getOneofIndex());
      }
      if (other.hasJsonName()) {
        bitField0_ |= 0x00000100;
        jsonName_ = other.jsonName_;
        onChanged();
      }
      if (other.hasOptions()) {
        mergeOptions(other.getOptions());
      }
      if (other.hasProto3Optional()) {
        setProto3Optional(other.getProto3Optional());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.alibaba.opensergo.api.proto.FieldDescriptorProto parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.alibaba.opensergo.api.proto.FieldDescriptorProto) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <code>optional string name = 1;</code>
     * @return Whether the name field is set.
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string name = 1;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      bitField0_ = (bitField0_ & ~0x00000001);
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <code>optional string name = 1;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      bitField0_ |= 0x00000001;
      name_ = value;
      onChanged();
      return this;
    }

    private int number_ ;
    /**
     * <code>optional int32 number = 3;</code>
     * @return Whether the number field is set.
     */
    @java.lang.Override
    public boolean hasNumber() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int32 number = 3;</code>
     * @return The number.
     */
    @java.lang.Override
    public int getNumber() {
      return number_;
    }
    /**
     * <code>optional int32 number = 3;</code>
     * @param value The number to set.
     * @return This builder for chaining.
     */
    public Builder setNumber(int value) {
      bitField0_ |= 0x00000002;
      number_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 number = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearNumber() {
      bitField0_ = (bitField0_ & ~0x00000002);
      number_ = 0;
      onChanged();
      return this;
    }

    private int label_ = 0;
    /**
     * <code>optional .opensergo.api.FieldDescriptorProto.Label label = 4;</code>
     * @return Whether the label field is set.
     */
    @java.lang.Override public boolean hasLabel() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .opensergo.api.FieldDescriptorProto.Label label = 4;</code>
     * @return The enum numeric value on the wire for label.
     */
    @java.lang.Override public int getLabelValue() {
      return label_;
    }
    /**
     * <code>optional .opensergo.api.FieldDescriptorProto.Label label = 4;</code>
     * @param value The enum numeric value on the wire for label to set.
     * @return This builder for chaining.
     */
    public Builder setLabelValue(int value) {
      bitField0_ |= 0x00000004;
      label_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional .opensergo.api.FieldDescriptorProto.Label label = 4;</code>
     * @return The label.
     */
    @java.lang.Override
    public com.alibaba.opensergo.api.proto.FieldDescriptorProto.Label getLabel() {
      @SuppressWarnings("deprecation")
      com.alibaba.opensergo.api.proto.FieldDescriptorProto.Label result = com.alibaba.opensergo.api.proto.FieldDescriptorProto.Label.valueOf(label_);
      return result == null ? com.alibaba.opensergo.api.proto.FieldDescriptorProto.Label.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .opensergo.api.FieldDescriptorProto.Label label = 4;</code>
     * @param value The label to set.
     * @return This builder for chaining.
     */
    public Builder setLabel(com.alibaba.opensergo.api.proto.FieldDescriptorProto.Label value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      label_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .opensergo.api.FieldDescriptorProto.Label label = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearLabel() {
      bitField0_ = (bitField0_ & ~0x00000004);
      label_ = 0;
      onChanged();
      return this;
    }

    private int type_ = 0;
    /**
     * <pre>
     * If type_name is set, this need not be set.  If both this and type_name
     * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.
     * </pre>
     *
     * <code>optional .opensergo.api.FieldDescriptorProto.Type type = 5;</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override public boolean hasType() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * If type_name is set, this need not be set.  If both this and type_name
     * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.
     * </pre>
     *
     * <code>optional .opensergo.api.FieldDescriptorProto.Type type = 5;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * If type_name is set, this need not be set.  If both this and type_name
     * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.
     * </pre>
     *
     * <code>optional .opensergo.api.FieldDescriptorProto.Type type = 5;</code>
     * @param value The enum numeric value on the wire for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeValue(int value) {
      bitField0_ |= 0x00000008;
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If type_name is set, this need not be set.  If both this and type_name
     * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.
     * </pre>
     *
     * <code>optional .opensergo.api.FieldDescriptorProto.Type type = 5;</code>
     * @return The type.
     */
    @java.lang.Override
    public com.alibaba.opensergo.api.proto.FieldDescriptorProto.Type getType() {
      @SuppressWarnings("deprecation")
      com.alibaba.opensergo.api.proto.FieldDescriptorProto.Type result = com.alibaba.opensergo.api.proto.FieldDescriptorProto.Type.valueOf(type_);
      return result == null ? com.alibaba.opensergo.api.proto.FieldDescriptorProto.Type.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * If type_name is set, this need not be set.  If both this and type_name
     * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.
     * </pre>
     *
     * <code>optional .opensergo.api.FieldDescriptorProto.Type type = 5;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(com.alibaba.opensergo.api.proto.FieldDescriptorProto.Type value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If type_name is set, this need not be set.  If both this and type_name
     * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.
     * </pre>
     *
     * <code>optional .opensergo.api.FieldDescriptorProto.Type type = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      bitField0_ = (bitField0_ & ~0x00000008);
      type_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object typeName_ = "";
    /**
     * <pre>
     * For message and enum types, this is the name of the type.  If the name
     * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping
     * rules are used to find the type (i.e. first the nested types within this
     * message are searched, then within the parent, on up to the root
     * namespace).
     * </pre>
     *
     * <code>optional string type_name = 6;</code>
     * @return Whether the typeName field is set.
     */
    public boolean hasTypeName() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * For message and enum types, this is the name of the type.  If the name
     * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping
     * rules are used to find the type (i.e. first the nested types within this
     * message are searched, then within the parent, on up to the root
     * namespace).
     * </pre>
     *
     * <code>optional string type_name = 6;</code>
     * @return The typeName.
     */
    public java.lang.String getTypeName() {
      java.lang.Object ref = typeName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        typeName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * For message and enum types, this is the name of the type.  If the name
     * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping
     * rules are used to find the type (i.e. first the nested types within this
     * message are searched, then within the parent, on up to the root
     * namespace).
     * </pre>
     *
     * <code>optional string type_name = 6;</code>
     * @return The bytes for typeName.
     */
    public com.google.protobuf.ByteString
        getTypeNameBytes() {
      java.lang.Object ref = typeName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        typeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * For message and enum types, this is the name of the type.  If the name
     * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping
     * rules are used to find the type (i.e. first the nested types within this
     * message are searched, then within the parent, on up to the root
     * namespace).
     * </pre>
     *
     * <code>optional string type_name = 6;</code>
     * @param value The typeName to set.
     * @return This builder for chaining.
     */
    public Builder setTypeName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
      typeName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * For message and enum types, this is the name of the type.  If the name
     * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping
     * rules are used to find the type (i.e. first the nested types within this
     * message are searched, then within the parent, on up to the root
     * namespace).
     * </pre>
     *
     * <code>optional string type_name = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearTypeName() {
      bitField0_ = (bitField0_ & ~0x00000010);
      typeName_ = getDefaultInstance().getTypeName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * For message and enum types, this is the name of the type.  If the name
     * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping
     * rules are used to find the type (i.e. first the nested types within this
     * message are searched, then within the parent, on up to the root
     * namespace).
     * </pre>
     *
     * <code>optional string type_name = 6;</code>
     * @param value The bytes for typeName to set.
     * @return This builder for chaining.
     */
    public Builder setTypeNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      bitField0_ |= 0x00000010;
      typeName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object extendee_ = "";
    /**
     * <pre>
     * For extensions, this is the name of the type being extended.  It is
     * resolved in the same manner as type_name.
     * </pre>
     *
     * <code>optional string extendee = 2;</code>
     * @return Whether the extendee field is set.
     */
    public boolean hasExtendee() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * For extensions, this is the name of the type being extended.  It is
     * resolved in the same manner as type_name.
     * </pre>
     *
     * <code>optional string extendee = 2;</code>
     * @return The extendee.
     */
    public java.lang.String getExtendee() {
      java.lang.Object ref = extendee_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        extendee_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * For extensions, this is the name of the type being extended.  It is
     * resolved in the same manner as type_name.
     * </pre>
     *
     * <code>optional string extendee = 2;</code>
     * @return The bytes for extendee.
     */
    public com.google.protobuf.ByteString
        getExtendeeBytes() {
      java.lang.Object ref = extendee_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        extendee_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * For extensions, this is the name of the type being extended.  It is
     * resolved in the same manner as type_name.
     * </pre>
     *
     * <code>optional string extendee = 2;</code>
     * @param value The extendee to set.
     * @return This builder for chaining.
     */
    public Builder setExtendee(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      extendee_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * For extensions, this is the name of the type being extended.  It is
     * resolved in the same manner as type_name.
     * </pre>
     *
     * <code>optional string extendee = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearExtendee() {
      bitField0_ = (bitField0_ & ~0x00000020);
      extendee_ = getDefaultInstance().getExtendee();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * For extensions, this is the name of the type being extended.  It is
     * resolved in the same manner as type_name.
     * </pre>
     *
     * <code>optional string extendee = 2;</code>
     * @param value The bytes for extendee to set.
     * @return This builder for chaining.
     */
    public Builder setExtendeeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      bitField0_ |= 0x00000020;
      extendee_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object defaultValue_ = "";
    /**
     * <pre>
     * For numeric types, contains the original text representation of the value.
     * For booleans, "true" or "false".
     * For strings, contains the default text contents (not escaped in any way).
     * For bytes, contains the C escaped value.  All bytes &gt;= 128 are escaped.
     * </pre>
     *
     * <code>optional string default_value = 7;</code>
     * @return Whether the defaultValue field is set.
     */
    public boolean hasDefaultValue() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * For numeric types, contains the original text representation of the value.
     * For booleans, "true" or "false".
     * For strings, contains the default text contents (not escaped in any way).
     * For bytes, contains the C escaped value.  All bytes &gt;= 128 are escaped.
     * </pre>
     *
     * <code>optional string default_value = 7;</code>
     * @return The defaultValue.
     */
    public java.lang.String getDefaultValue() {
      java.lang.Object ref = defaultValue_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        defaultValue_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * For numeric types, contains the original text representation of the value.
     * For booleans, "true" or "false".
     * For strings, contains the default text contents (not escaped in any way).
     * For bytes, contains the C escaped value.  All bytes &gt;= 128 are escaped.
     * </pre>
     *
     * <code>optional string default_value = 7;</code>
     * @return The bytes for defaultValue.
     */
    public com.google.protobuf.ByteString
        getDefaultValueBytes() {
      java.lang.Object ref = defaultValue_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        defaultValue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * For numeric types, contains the original text representation of the value.
     * For booleans, "true" or "false".
     * For strings, contains the default text contents (not escaped in any way).
     * For bytes, contains the C escaped value.  All bytes &gt;= 128 are escaped.
     * </pre>
     *
     * <code>optional string default_value = 7;</code>
     * @param value The defaultValue to set.
     * @return This builder for chaining.
     */
    public Builder setDefaultValue(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
      defaultValue_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * For numeric types, contains the original text representation of the value.
     * For booleans, "true" or "false".
     * For strings, contains the default text contents (not escaped in any way).
     * For bytes, contains the C escaped value.  All bytes &gt;= 128 are escaped.
     * </pre>
     *
     * <code>optional string default_value = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearDefaultValue() {
      bitField0_ = (bitField0_ & ~0x00000040);
      defaultValue_ = getDefaultInstance().getDefaultValue();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * For numeric types, contains the original text representation of the value.
     * For booleans, "true" or "false".
     * For strings, contains the default text contents (not escaped in any way).
     * For bytes, contains the C escaped value.  All bytes &gt;= 128 are escaped.
     * </pre>
     *
     * <code>optional string default_value = 7;</code>
     * @param value The bytes for defaultValue to set.
     * @return This builder for chaining.
     */
    public Builder setDefaultValueBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      bitField0_ |= 0x00000040;
      defaultValue_ = value;
      onChanged();
      return this;
    }

    private int oneofIndex_ ;
    /**
     * <pre>
     * If set, gives the index of a oneof in the containing type's oneof_decl
     * list.  This field is a member of that oneof.
     * </pre>
     *
     * <code>optional int32 oneof_index = 9;</code>
     * @return Whether the oneofIndex field is set.
     */
    @java.lang.Override
    public boolean hasOneofIndex() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * If set, gives the index of a oneof in the containing type's oneof_decl
     * list.  This field is a member of that oneof.
     * </pre>
     *
     * <code>optional int32 oneof_index = 9;</code>
     * @return The oneofIndex.
     */
    @java.lang.Override
    public int getOneofIndex() {
      return oneofIndex_;
    }
    /**
     * <pre>
     * If set, gives the index of a oneof in the containing type's oneof_decl
     * list.  This field is a member of that oneof.
     * </pre>
     *
     * <code>optional int32 oneof_index = 9;</code>
     * @param value The oneofIndex to set.
     * @return This builder for chaining.
     */
    public Builder setOneofIndex(int value) {
      bitField0_ |= 0x00000080;
      oneofIndex_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If set, gives the index of a oneof in the containing type's oneof_decl
     * list.  This field is a member of that oneof.
     * </pre>
     *
     * <code>optional int32 oneof_index = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearOneofIndex() {
      bitField0_ = (bitField0_ & ~0x00000080);
      oneofIndex_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object jsonName_ = "";
    /**
     * <pre>
     * JSON name of this field. The value is set by protocol compiler. If the
     * user has set a "json_name" option on this field, that option's value
     * will be used. Otherwise, it's deduced from the field's name by converting
     * it to camelCase.
     * </pre>
     *
     * <code>optional string json_name = 10;</code>
     * @return Whether the jsonName field is set.
     */
    public boolean hasJsonName() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * JSON name of this field. The value is set by protocol compiler. If the
     * user has set a "json_name" option on this field, that option's value
     * will be used. Otherwise, it's deduced from the field's name by converting
     * it to camelCase.
     * </pre>
     *
     * <code>optional string json_name = 10;</code>
     * @return The jsonName.
     */
    public java.lang.String getJsonName() {
      java.lang.Object ref = jsonName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        jsonName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * JSON name of this field. The value is set by protocol compiler. If the
     * user has set a "json_name" option on this field, that option's value
     * will be used. Otherwise, it's deduced from the field's name by converting
     * it to camelCase.
     * </pre>
     *
     * <code>optional string json_name = 10;</code>
     * @return The bytes for jsonName.
     */
    public com.google.protobuf.ByteString
        getJsonNameBytes() {
      java.lang.Object ref = jsonName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        jsonName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * JSON name of this field. The value is set by protocol compiler. If the
     * user has set a "json_name" option on this field, that option's value
     * will be used. Otherwise, it's deduced from the field's name by converting
     * it to camelCase.
     * </pre>
     *
     * <code>optional string json_name = 10;</code>
     * @param value The jsonName to set.
     * @return This builder for chaining.
     */
    public Builder setJsonName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
      jsonName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * JSON name of this field. The value is set by protocol compiler. If the
     * user has set a "json_name" option on this field, that option's value
     * will be used. Otherwise, it's deduced from the field's name by converting
     * it to camelCase.
     * </pre>
     *
     * <code>optional string json_name = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearJsonName() {
      bitField0_ = (bitField0_ & ~0x00000100);
      jsonName_ = getDefaultInstance().getJsonName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * JSON name of this field. The value is set by protocol compiler. If the
     * user has set a "json_name" option on this field, that option's value
     * will be used. Otherwise, it's deduced from the field's name by converting
     * it to camelCase.
     * </pre>
     *
     * <code>optional string json_name = 10;</code>
     * @param value The bytes for jsonName to set.
     * @return This builder for chaining.
     */
    public Builder setJsonNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      bitField0_ |= 0x00000100;
      jsonName_ = value;
      onChanged();
      return this;
    }

    private com.alibaba.opensergo.api.proto.FieldOptions options_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.alibaba.opensergo.api.proto.FieldOptions, com.alibaba.opensergo.api.proto.FieldOptions.Builder, com.alibaba.opensergo.api.proto.FieldOptionsOrBuilder> optionsBuilder_;
    /**
     * <code>optional .opensergo.api.FieldOptions options = 8;</code>
     * @return Whether the options field is set.
     */
    public boolean hasOptions() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional .opensergo.api.FieldOptions options = 8;</code>
     * @return The options.
     */
    public com.alibaba.opensergo.api.proto.FieldOptions getOptions() {
      if (optionsBuilder_ == null) {
        return options_ == null ? com.alibaba.opensergo.api.proto.FieldOptions.getDefaultInstance() : options_;
      } else {
        return optionsBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .opensergo.api.FieldOptions options = 8;</code>
     */
    public Builder setOptions(com.alibaba.opensergo.api.proto.FieldOptions value) {
      if (optionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        options_ = value;
        onChanged();
      } else {
        optionsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000200;
      return this;
    }
    /**
     * <code>optional .opensergo.api.FieldOptions options = 8;</code>
     */
    public Builder setOptions(
        com.alibaba.opensergo.api.proto.FieldOptions.Builder builderForValue) {
      if (optionsBuilder_ == null) {
        options_ = builderForValue.build();
        onChanged();
      } else {
        optionsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000200;
      return this;
    }
    /**
     * <code>optional .opensergo.api.FieldOptions options = 8;</code>
     */
    public Builder mergeOptions(com.alibaba.opensergo.api.proto.FieldOptions value) {
      if (optionsBuilder_ == null) {
        if (((bitField0_ & 0x00000200) != 0) &&
            options_ != null &&
            options_ != com.alibaba.opensergo.api.proto.FieldOptions.getDefaultInstance()) {
          options_ =
            com.alibaba.opensergo.api.proto.FieldOptions.newBuilder(options_).mergeFrom(value).buildPartial();
        } else {
          options_ = value;
        }
        onChanged();
      } else {
        optionsBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000200;
      return this;
    }
    /**
     * <code>optional .opensergo.api.FieldOptions options = 8;</code>
     */
    public Builder clearOptions() {
      if (optionsBuilder_ == null) {
        options_ = null;
        onChanged();
      } else {
        optionsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000200);
      return this;
    }
    /**
     * <code>optional .opensergo.api.FieldOptions options = 8;</code>
     */
    public com.alibaba.opensergo.api.proto.FieldOptions.Builder getOptionsBuilder() {
      bitField0_ |= 0x00000200;
      onChanged();
      return getOptionsFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .opensergo.api.FieldOptions options = 8;</code>
     */
    public com.alibaba.opensergo.api.proto.FieldOptionsOrBuilder getOptionsOrBuilder() {
      if (optionsBuilder_ != null) {
        return optionsBuilder_.getMessageOrBuilder();
      } else {
        return options_ == null ?
            com.alibaba.opensergo.api.proto.FieldOptions.getDefaultInstance() : options_;
      }
    }
    /**
     * <code>optional .opensergo.api.FieldOptions options = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.alibaba.opensergo.api.proto.FieldOptions, com.alibaba.opensergo.api.proto.FieldOptions.Builder, com.alibaba.opensergo.api.proto.FieldOptionsOrBuilder> 
        getOptionsFieldBuilder() {
      if (optionsBuilder_ == null) {
        optionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.opensergo.api.proto.FieldOptions, com.alibaba.opensergo.api.proto.FieldOptions.Builder, com.alibaba.opensergo.api.proto.FieldOptionsOrBuilder>(
                getOptions(),
                getParentForChildren(),
                isClean());
        options_ = null;
      }
      return optionsBuilder_;
    }

    private boolean proto3Optional_ ;
    /**
     * <pre>
     * If true, this is a proto3 "optional". When a proto3 field is optional, it
     * tracks presence regardless of field type.
     * When proto3_optional is true, this field must be belong to a oneof to
     * signal to old proto3 clients that presence is tracked for this field. This
     * oneof is known as a "synthetic" oneof, and this field must be its sole
     * member (each proto3 optional field gets its own synthetic oneof). Synthetic
     * oneofs exist in the descriptor only, and do not generate any API. Synthetic
     * oneofs must be ordered after all "real" oneofs.
     * For message fields, proto3_optional doesn't create any semantic change,
     * since non-repeated message fields always track presence. However it still
     * indicates the semantic detail of whether the user wrote "optional" or not.
     * This can be useful for round-tripping the .proto file. For consistency we
     * give message fields a synthetic oneof also, even though it is not required
     * to track presence. This is especially important because the parser can't
     * tell if a field is a message or an enum, so it must always create a
     * synthetic oneof.
     * Proto2 optional fields do not set this flag, because they already indicate
     * optional with `LABEL_OPTIONAL`.
     * </pre>
     *
     * <code>optional bool proto3_optional = 17;</code>
     * @return Whether the proto3Optional field is set.
     */
    @java.lang.Override
    public boolean hasProto3Optional() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * If true, this is a proto3 "optional". When a proto3 field is optional, it
     * tracks presence regardless of field type.
     * When proto3_optional is true, this field must be belong to a oneof to
     * signal to old proto3 clients that presence is tracked for this field. This
     * oneof is known as a "synthetic" oneof, and this field must be its sole
     * member (each proto3 optional field gets its own synthetic oneof). Synthetic
     * oneofs exist in the descriptor only, and do not generate any API. Synthetic
     * oneofs must be ordered after all "real" oneofs.
     * For message fields, proto3_optional doesn't create any semantic change,
     * since non-repeated message fields always track presence. However it still
     * indicates the semantic detail of whether the user wrote "optional" or not.
     * This can be useful for round-tripping the .proto file. For consistency we
     * give message fields a synthetic oneof also, even though it is not required
     * to track presence. This is especially important because the parser can't
     * tell if a field is a message or an enum, so it must always create a
     * synthetic oneof.
     * Proto2 optional fields do not set this flag, because they already indicate
     * optional with `LABEL_OPTIONAL`.
     * </pre>
     *
     * <code>optional bool proto3_optional = 17;</code>
     * @return The proto3Optional.
     */
    @java.lang.Override
    public boolean getProto3Optional() {
      return proto3Optional_;
    }
    /**
     * <pre>
     * If true, this is a proto3 "optional". When a proto3 field is optional, it
     * tracks presence regardless of field type.
     * When proto3_optional is true, this field must be belong to a oneof to
     * signal to old proto3 clients that presence is tracked for this field. This
     * oneof is known as a "synthetic" oneof, and this field must be its sole
     * member (each proto3 optional field gets its own synthetic oneof). Synthetic
     * oneofs exist in the descriptor only, and do not generate any API. Synthetic
     * oneofs must be ordered after all "real" oneofs.
     * For message fields, proto3_optional doesn't create any semantic change,
     * since non-repeated message fields always track presence. However it still
     * indicates the semantic detail of whether the user wrote "optional" or not.
     * This can be useful for round-tripping the .proto file. For consistency we
     * give message fields a synthetic oneof also, even though it is not required
     * to track presence. This is especially important because the parser can't
     * tell if a field is a message or an enum, so it must always create a
     * synthetic oneof.
     * Proto2 optional fields do not set this flag, because they already indicate
     * optional with `LABEL_OPTIONAL`.
     * </pre>
     *
     * <code>optional bool proto3_optional = 17;</code>
     * @param value The proto3Optional to set.
     * @return This builder for chaining.
     */
    public Builder setProto3Optional(boolean value) {
      bitField0_ |= 0x00000400;
      proto3Optional_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If true, this is a proto3 "optional". When a proto3 field is optional, it
     * tracks presence regardless of field type.
     * When proto3_optional is true, this field must be belong to a oneof to
     * signal to old proto3 clients that presence is tracked for this field. This
     * oneof is known as a "synthetic" oneof, and this field must be its sole
     * member (each proto3 optional field gets its own synthetic oneof). Synthetic
     * oneofs exist in the descriptor only, and do not generate any API. Synthetic
     * oneofs must be ordered after all "real" oneofs.
     * For message fields, proto3_optional doesn't create any semantic change,
     * since non-repeated message fields always track presence. However it still
     * indicates the semantic detail of whether the user wrote "optional" or not.
     * This can be useful for round-tripping the .proto file. For consistency we
     * give message fields a synthetic oneof also, even though it is not required
     * to track presence. This is especially important because the parser can't
     * tell if a field is a message or an enum, so it must always create a
     * synthetic oneof.
     * Proto2 optional fields do not set this flag, because they already indicate
     * optional with `LABEL_OPTIONAL`.
     * </pre>
     *
     * <code>optional bool proto3_optional = 17;</code>
     * @return This builder for chaining.
     */
    public Builder clearProto3Optional() {
      bitField0_ = (bitField0_ & ~0x00000400);
      proto3Optional_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:opensergo.api.FieldDescriptorProto)
  }

  // @@protoc_insertion_point(class_scope:opensergo.api.FieldDescriptorProto)
  private static final com.alibaba.opensergo.api.proto.FieldDescriptorProto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.alibaba.opensergo.api.proto.FieldDescriptorProto();
  }

  public static com.alibaba.opensergo.api.proto.FieldDescriptorProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<FieldDescriptorProto>
      PARSER = new com.google.protobuf.AbstractParser<FieldDescriptorProto>() {
    @java.lang.Override
    public FieldDescriptorProto parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new FieldDescriptorProto(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<FieldDescriptorProto> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FieldDescriptorProto> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.alibaba.opensergo.api.proto.FieldDescriptorProto getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

